@startuml

package 交互物品
{
    interface IInteractable {
    可交互对象基类
    --
    + OnClickInteract(交互者:Interactor)
    }   

    class Item
    {
        物品配置
        --
        + 物品类型:ItemType
        + 物品名字:string
        + 物品数量:int
        + 物品图片:Sprite
        + 预制体:GameObject
    }
    class ScriptableObject { }

    enum ItemType
    {
        Default 默认
        ToolOrWeapon 工具
        Placeable 可放置
        Consumeable 可消耗
    }

    class ItemCollector {
        掉落物
        --
        - 物品:Item
        - 自转()
        - 创建该掉落物(item:Item)
        - 交互者触发事件(other:Collider)
        - 添加到交互者背包()
    }

    class InstantHarvest {
        可拾取物
        --
        - 是否被拾取:bool
        + 物品:Item
        + OnClickInteract(交互者:Interactor)
        + 拾取物品(交互者:Interactor)
    }

    class Harvestable {
        可掉落物品的物体挂载
        --
        + HP:float
        + OnClickInteract(交互者:Interactor)
        + 可掉落物集合:HarvestDrop[]
        - 随机掉落(交互者:Interactor)
    }

    class HarvestDrop
    {
        掉落物
        --
        + itemDrop:Item
        + 该物品掉落概率:float
    }
}

package 管理
{
    class ItemManager
    {
        + {static} Instance:ItemManager
        + 所有物品列表:List<Item>
        + 使用物品(slot:ItemSlot)
        + 消耗物品(slot:ItemSlot)
        + 装备物品(slot:ItemSlot)
        + 放置物品(slot:ItemSlot)
        + 默认使用物品(slot:ItemSlot)
        + GetItemByIndex(index:int):Item
        + GetItemByName(name:string):Item
        + GetItemIndex(item:Item):int
    }

    class ItemContatiner {
        背包容器
        --
        + 交互者:Interactor
        # 背包标题:string
        # UIToggleKey:KeyCode
        - 菜单配置:SlotOptions[]
        + 丢弃物品是否实例化:bool
        # slots:ItemSlot[]
        # mainContainerUI:Transform
        # 物品信息UI面板预制体:GameObject
        # 物品右键选项预制体:GameObject
        - slotOptionButtonInfoList:List<SlotOptionButtonInfo>


        + AddItem(item:Item):bool
        + 是否存在(item:Item):bool
        + 数量是否正确(item:Item, amount:int):bool
        + 保存数据(id:string)
        + 加载数据(id:string)
        + 删除数据(id:string)
        # virtual 得到存档路径(id:string)
        # virtual 初始化()
        # 初始化主面板()
        # virtual 创建菜单列表(config:SlotOptions[],交互者:Interactor)
        # 物品插槽UI点击(slot:ItemSlot, 交互者:Interactor)
        # ToggleUI()

        - 打开物品选项菜单()
        - 关闭物品选项菜单()
        - 点击物品选项菜单_删除物品(slot ItemSlot,交互者:Interactor)
        - 点击物品选项菜单_使用物品(slot ItemSlot,交互者:Interactor)
        - 点击物品选项菜单_批量删除物品(slot ItemSlot,交互者:Interactor)
        - 点击物品选项菜单_物品信息(slot ItemSlot,交互者:Interactor)
        - OnSlotButtonEventFinished(slot ItemSlot)


    }

    class ExternalItemContainer {
        宝箱容器，继承背包容器
    }

    enum SlotOptions
    {
        Use,//使用这个物品
        Remove,//删除一个物品
        BulkRemove,//删除此项全部物品
        ItemInfo,//物品介绍
        TransferToInventory
    }

    class SlotOptionButtonInfo {
        ~ optionBtn:Button
        ~ onButtonClicked:Action<ItemSlot,Interactor>
        ~ onButtonEventFinished:Action<ItemSlot>
        ~ 更新信息(slot:ItemSlot,交互者:Interactor)
    }
        class ItemSlot
    {
        UI插槽,所有操作方法都是
        在操作同一个格子
        --
        + slotItem:Item
        + 当前同种Item数量:int
        + 是否为空:bool
        - 图标:Image
        - 文字:Text

        + Add(item:Item):bool
        + RemoveAndDrop(amount:int, dropPos:Vector3)
        + Remove(删除的数量:int)
        + Clear()
        + ClearAndDrop(dropPos:Vector3)
        - 是否可以继续添加(item:Item):bool
        - 刷新UI插槽显示()
    }

    class ItemSlotUIEvents
    {
        + {static} event OnSlotDrag : Action
        - {static} 悬停ItemSlot : ItemSlot
        - mySlot : ItemSlot

    }



    class sda {
        disabledsa
        disable 
    }

    class Interactor
    {
        交互者挂载
        --
        + 背包管理:ItemContatiner
        + 放置物品被实例化位置:Vector3
        - 当前可交互目标:InteractionTarget

        - 可交互对象射线检测处理()
        - 目标位置是否在交互范围(targetPos:Vector3):bool
        + 添加到背包(item:Item, gameObj:GameObject):bool
    }

    class InteractionTarget
    {
        可交互目标
        --
        ~ interactable:IInteractable
        ~ gameObject:GameObject
    }
}

sda --> ItemContatiner

Item --|> ScriptableObject
Item ..> ItemType
ItemManager o-- Item
ItemManager ..> Item
ItemManager ..> ItemSlot

ItemContatiner <|-- ExternalItemContainer
ItemContatiner --> Interactor
ItemContatiner o-- SlotOptions
ItemContatiner o-- SlotOptionButtonInfo
ItemContatiner ..> Item
ItemContatiner ..> Interactor
ItemContatiner ..> ItemSlot

IInteractable <|.. InstantHarvest
IInteractable <|.. Harvestable
IInteractable ..> Interactor

Interactor --> InteractionTarget
Interactor --> ItemContatiner
Interactor ..> Item

InteractionTarget -->IInteractable

ItemCollector --> Item
ItemCollector ..> Item

ItemSlot --> Item
ItemSlot ..> Item
ItemSlot <-- ItemSlotUIEvents

InstantHarvest ..> Interactor
InstantHarvest ..> Item
Harvestable ..> Interactor
Harvestable o-- HarvestDrop
HarvestDrop -->Item
@enduml
